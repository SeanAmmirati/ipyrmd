#!/usr/bin/env python3

from ipyrmd import __version__, ipynb_to_rmd, rmd_to_ipynb

import argparse
import sys
import pathlib

parser = argparse.ArgumentParser(description="Convert between IPYNB and RMD formats")
parser.add_argument("--to", choices=["ipynb", "Rmd"],
                    help="Output format (default: inferred from input filename)")
parser.add_argument("-o", "--out", type=str,
                    help="Output filename (default: input filename with switched extension)")
parser.add_argument("-y", action="store_true", default=False,
                    help="Overwrite existing output file")
parser.add_argument("--version", action="store_true", help="Display version and exit")
parser.add_argument("filename", help="Input filename")

args = parser.parse_args()

if args.version:
    print("ipyrmd version {0}".format(__version__))
    sys.exit(0)

if args.to is not None:
    target = args.to
else:
    if args.filename.lower().endswith("ipynb"):
        target = "Rmd"
    elif args.filename.lower().endswith("rmd"):
        target = "ipynb"
    else:
        print("Filename does not end either .ipynb or .Rmd")
        print("Please specify output format with --to")
        sys.exit(1)

path_in = pathlib.Path(args.filename)
if not path_in.exists():
    print('Input filename "{0}" does not exist'.format(path_in))
    sys.exit(1)

if args.out is not None:
    path_out = pathlib.Path(args.out)
else:
    path_out = path_in.with_suffix("." + target)

if path_out.exists() and not args.y:
    print('Output filename "{0}" exists (allow overwrite with -y)'.format(path_out))
    sys.exit(1)

if target == "Rmd":
    print("Converting (ipynb->Rmd) {0} to {1}".format(path_in, path_out))
    ipynb_to_rmd(str(path_in), str(path_out))
else:
    print("Converting (Rmd->ipynb) {0} to {1}".format(path_in, path_out))
    rmd_to_ipynb(str(path_in), str(path_out))
